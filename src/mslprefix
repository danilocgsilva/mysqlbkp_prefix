#!/bin/bash

##
# This function is not part from core function and just helps the question making.
#
# This function asks a questions.
#
# @param "$1"
#   The title's question
# @param $2
#   The variable to be filled
#
askshell_ask() {
    read -p "$1" $2
}


##
# This function is not part from core function and just helps the question making.
# 
# Forbids the answer to be null
#
# @param "$1"
#   The title's question
# @param $2
#   The variable to be filled
#
askshell_notempty() {

    askshell_ask "$1" $2 
    answer=${!2}

    if [ ${#answer} -eq 0 ]; then
        echo You did not provides any answer to "$1" question. Please, provides something.
        askshell_notempty "$1" $2
    fi
}


##
# If everything is ok, do the backup.
# @param $1
#   The database prefix
# @param $2
#   The database user
# @param $3
#   The database name
# @param $4
#   The password
# @param $5
#   The hostname
#
do_the_backup() {
    backupfilename=mslbkp.$(date +%y%m%d.%Hh%Mm%Ss).sql

    for i in $(mysql -u$2 -p$4 -h$5 $3 -e "SHOW TABLES" | grep ^$1); do
        mysqldump -u$2 -p$4 -h$5 $3 $i >> $backupfilename
        echo $i table has backuped.
    done
}



##
# Tasks
#
readonly CONFIGFILE=connectiondata.txt
readonly INVALID_CONFIGFILE="Something wrong to "$CONFIGFILE". Check for documentation."
readonly CHECKUSER="cat $CONFIGFILE | grep -i ^user:"
readonly CHECKPASS="cat $CONFIGFILE | grep -i ^pass:"
readonly CHECKDATABASENAME="cat $CONFIGFILE | grep -i ^dbname:"
readonly CHECKHOST="cat $CONFIGFILE | grep -i ^host:"
readonly CHECKPREFIX="cat $CONFIGFILE | grep -i ^prefix:"
readonly CHECKDELETEAFTER="cat $CONFIGFILE | grep -i ^deletethisafter:"

if ! [ -f $CONFIGFILE ]; then
    echo There\'s no connectiondata.txt in the directory.
    echo The file must be in the format:
    echo user:DATABASEUSER
    echo pass:DATABASEPASSWORD
    echo dbname:DATABASENAME
    echo host:DATABASEHOST
    echo prefix:DATABASEPREFIX
    echo deletethisafter:yes|no
    echo \(The prefix: and deletethisafter: is optional\)
    echo Or check the How_to_use.md from sources: https://raw.githubusercontent.com/danilocgsilva/mysqlbkp_prefix/master/How_to_use.md
    exit
fi

##
# The variable fetching automatically validates the connectiondata.txt.
# If something required not found, exits.
# If something not valid, also exits
#
if ! eval $CHECKUSER > /dev/null ; then echo $INVALID_CONFIGFILE; exit; fi
user=$(eval $CHECKUSER | cut -f2 -d:)
if ! eval $CHECKPASS > /dev/null ; then echo $INVALID_CONFIGFILE; exit; fi
pass=$(eval $CHECKPASS | cut -f2 -d:)
if ! eval $CHECKDATABASENAME > /dev/null ; then echo $INVALID_CONFIGFILE; exit; fi
dbname=$(eval $CHECKDATABASENAME | cut -f2 -d:)
if ! eval $CHECKHOST > /dev/null ; then echo $INVALID_CONFIGFILE; exit; fi
prefix=$(eval $CHECKPREFIX | cut -f2 -d:)

if eval $CHECKDELETEAFTER > /dev/null ; then
    deleteafter=$(eval $CHECKDELETEAFTER | cut -f2 -d:)
    if ! [[ $deleteafter =~ yes|no ]]; then
        echo $INVALID_CONFIGFILE
        exit
    fi
else
    deleteafter=yes # The default value
fi

if eval $CHECKHOST > /dev/null; then
    host=$(eval $CHECKHOST | cut -f2 -d:)
else
    host=localhost # The default value
fi

##
# Tests the connection
#
if ! mysql -u$user -p$pass -h$host $dbname -e "quit"; then
    echo Something wrong to the mysql credentials.
    exit
fi

echo Check for informations from the file configuration:
echo "Database user: "$user
echo "Database name: "$dbname
echo "Database host: "$host
echo "Database pass: ***"
echo "Database prefix: "$prefix

if [ $deleteafter = yes ]; then
    echo The configuration file will be deleted after the operation.
else
    echo The configuration file will remain.
fi

echo Are the informations correct? If something is wrong, revise the configuration file.

askshell_notempty "Answer \"yes\" or \"no\": " answerpositive
echo The answer was $answerpositive

if ! [ $answerpositive = yes ]; then
    echo You answered $answerpositive.
    echo In doubt, skiping.
    exit
fi

do_the_backup $prefix $user $dbname $pass $host

if [ $deleteafter = yes ]; then
    rm $CONFIGFILE
fi
